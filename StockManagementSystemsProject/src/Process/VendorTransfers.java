/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Process;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 91979
 */
public class VendorTransfers extends javax.swing.JFrame {
    private Connection con;
    private static PreparedStatement pst;
    private static ResultSet rs;
    private String name;
    private String userType;
    private int id;
    /**
     * Creates new form Transfers
     */
    public VendorTransfers() {
        initComponents();
    }
    
     public VendorTransfers(String name, int id,String userType,Connection con) {
       initComponents();
       jUserId.setText(String.valueOf(id));
       jUserName.setText(name);
       this.con= con;
       this.name = name;
       this.userType = userType;
       this.id=id;
       jbtnTransfer.setEnabled(false);
       jtxtTrackingID.requestFocus();
    }
     
     

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtableProduct = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        jbtnViewProduct = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jtxtQty = new javax.swing.JTextField();
        jbtnTransfer = new javax.swing.JButton();
        jbtnback = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jUserId = new javax.swing.JLabel();
        jUserName = new javax.swing.JLabel();
        jtxtTrackingID = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        jtableProduct.setBackground(new java.awt.Color(51, 255, 204));
        jtableProduct.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jtableProduct.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jtableProduct.setForeground(new java.awt.Color(255, 153, 153));
        jtableProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "TrackID", "Prod_ID", "Prod_Name", "Description", "Costprice", "RetailPrice", "Qty", "Quality", "Vehicle No", "Reciving", "Remarks"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jtableProduct.setGridColor(new java.awt.Color(102, 255, 255));
        jtableProduct.setSelectionBackground(new java.awt.Color(0, 255, 255));
        jtableProduct.setSelectionForeground(new java.awt.Color(0, 0, 255));
        jtableProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtableProductjtableProductMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jtableProduct);

        jLabel19.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(153, 153, 255));
        jLabel19.setText("Tracking ID");

        jbtnViewProduct.setBackground(new java.awt.Color(153, 204, 255));
        jbtnViewProduct.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jbtnViewProduct.setForeground(new java.awt.Color(0, 0, 255));
        jbtnViewProduct.setText("View Product");
        jbtnViewProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnViewProductActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(153, 153, 255));
        jLabel20.setText("QTY");

        jtxtQty.setBackground(new java.awt.Color(102, 255, 204));
        jtxtQty.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jtxtQty.setForeground(new java.awt.Color(0, 0, 255));

        jbtnTransfer.setBackground(new java.awt.Color(153, 204, 255));
        jbtnTransfer.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jbtnTransfer.setForeground(new java.awt.Color(0, 0, 255));
        jbtnTransfer.setText("Transfer");
        jbtnTransfer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnTransferActionPerformed(evt);
            }
        });

        jbtnback.setBackground(new java.awt.Color(153, 204, 255));
        jbtnback.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jbtnback.setForeground(new java.awt.Color(0, 0, 255));
        jbtnback.setText("Back");
        jbtnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnbackjButton6ActionPerformed(evt);
            }
        });

        jLabel10.setBackground(new java.awt.Color(0, 255, 204));
        jLabel10.setFont(new java.awt.Font("Showcard Gothic", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 51, 255));
        jLabel10.setText("Vendor Product Transfer Page");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(153, 153, 255));
        jLabel12.setText("Name");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(153, 153, 255));
        jLabel11.setText("User Id");

        jUserId.setBackground(new java.awt.Color(255, 204, 204));
        jUserId.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jUserId.setForeground(new java.awt.Color(153, 153, 255));
        jUserId.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jUserId.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jUserId.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jUserName.setBackground(new java.awt.Color(255, 204, 204));
        jUserName.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jUserName.setForeground(new java.awt.Color(153, 153, 255));
        jUserName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jUserName.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jUserName.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jtxtTrackingID.setBackground(new java.awt.Color(102, 255, 204));
        jtxtTrackingID.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jtxtTrackingID.setForeground(new java.awt.Color(0, 0, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jbtnback)
                                .addGap(384, 384, 384)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 254, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jUserId, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtTrackingID, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jbtnViewProduct)
                        .addGap(45, 45, 45)
                        .addComponent(jLabel20)
                        .addGap(35, 35, 35)
                        .addComponent(jtxtQty, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbtnTransfer)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel12))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jUserId, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbtnback)))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jbtnViewProduct)
                    .addComponent(jtxtQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(jbtnTransfer)
                    .addComponent(jtxtTrackingID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jtableProductjtableProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtableProductjtableProductMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jtableProductjtableProductMouseClicked
    private void products(){
        try {
            boolean check = functionGetProducts();
            if(check==true){
            String trackId =jtxtTrackingID.getText();
            pst = con.prepareStatement("select * from RequestGRN where tracking_id=?");
            pst.setString(1, trackId);
            rs = pst.executeQuery();
            ResultSetMetaData rsm = rs.getMetaData();
            int c = rsm.getColumnCount();
            DefaultTableModel df = (DefaultTableModel)jtableProduct.getModel();
            df.setRowCount(0);
            while(rs.next()){
                Vector v = new Vector();
                for(int i=1;i<=c;i++){
                    v.add(rs.getString("tracking_id"));
                    v.add(rs.getString("Prod_Id"));
                    v.add(rs.getString("Prod_Name"));
                    v.add(rs.getString("Description"));
                    v.add(rs.getString("Costprice"));
                    v.add(rs.getString("RetailPrice"));
                    v.add(rs.getString("Qty"));
                    v.add(rs.getString("Quality"));
                    v.add(rs.getString("vehicleno"));
                    v.add(rs.getString("Reciving"));
                    v.add(rs.getString("Remarks"));
                }
                df.addRow(v);
            }
            }else{
                JOptionPane.showMessageDialog(this, "Material Not Found");
            }
        }
        catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }
    
    private boolean functionGetProducts() throws SQLException{
        String trackId =jtxtTrackingID.getText();
            pst = con.prepareStatement("select * from RequestGRN where tracking_id=?");
            pst.setString(1, trackId);
            rs = pst.executeQuery();
            return rs.next();
    }
    private void jbtnViewProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnViewProductActionPerformed
        products();
        if(!jtxtTrackingID.getText().equals("")){
        DefaultTableModel df = (DefaultTableModel)jtableProduct.getModel();
        String tracking_id =df.getValueAt(0, 0).toString();
        if(!tracking_id.equals("")){
            jbtnTransfer.setEnabled(true);
        }else{
            jbtnTransfer.setEnabled(false);
        }
            jtxtQty.requestFocus();
        }else{
            jbtnTransfer.setEnabled(false);
        }
    }//GEN-LAST:event_jbtnViewProductActionPerformed
    private boolean numcheck(String str){
        boolean flag =false;
        for(int i=0;i<str.length();i++){
            if('0'<=str.charAt(i)&&str.charAt(i)<='9'){
                flag=true;
            }else{
                flag=false;
                break;
            }
        }
      return flag;  
    }
    private void jbtnTransferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnTransferActionPerformed
        if(numcheck(jtxtQty.getText())){
        if(!jtxtQty.getText().equals("")){
        DefaultTableModel df = (DefaultTableModel)jtableProduct.getModel();
        String tracking_id =df.getValueAt(0, 0).toString();
        String Prod_Id =df.getValueAt(0, 1).toString();
        String Prod_Name =df.getValueAt(0, 2).toString();
        String Description =df.getValueAt(0, 3).toString();
        String Costprice =df.getValueAt(0, 4).toString();
        String RetailPrice =df.getValueAt(0, 5).toString();
        String Qty =df.getValueAt(0, 6).toString();
        String Quality =df.getValueAt(0, 7).toString();
        String vehicleno =df.getValueAt(0, 8).toString();
        String Reciving =df.getValueAt(0, 9).toString();
        String Remarks =df.getValueAt(0, 10).toString();
        if(Integer.parseInt(Qty)<Integer.parseInt(jtxtQty.getText())){
            JOptionPane.showMessageDialog(this, "Available Qty: "+Qty+"\nPlease try to Transfer Available Qty or less than that");
        }else{
        if(!jtxtTrackingID.getText().equals("")&&!jtxtQty.getText().equals("")){
        if(Integer.parseInt(Qty)>=Integer.parseInt(jtxtQty.getText())){
        String query = "select * from TransferTable where tracking_id=? and Prod_Id = ?";
            try {
                pst = con.prepareStatement(query);
                pst.setString(1, tracking_id);
                pst.setString(2, Prod_Id);
                rs = pst.executeQuery();
                if(rs.next()){
                   int TotalQty = Integer.parseInt(rs.getString("qty"))+Integer.parseInt(jtxtQty.getText());
                   String TotalQtyString = String.valueOf(TotalQty);
                   String sql = "Update TransferTable set Qty = ? where tracking_id = ? and  Prod_Id= ? ";
                   pst = con.prepareStatement(sql);
                   pst.setString(1, TotalQtyString);
                   pst.setString(2, tracking_id);
                   pst.setString(3, Prod_Id);
                   int counts = pst.executeUpdate();
                   if(0<counts){
                       int Qty1 = Integer.parseInt(Qty)-Integer.parseInt(jtxtQty.getText());
                    String exactQty = String.valueOf(Qty1);
                    sql = "Update RequestGRN set Qty = ? where tracking_id = ? and  Prod_Id= ? ";
                    pst = con.prepareStatement(sql);
                    pst.setString(1, exactQty);
                    pst.setString(2, tracking_id);
                    pst.setString(3, Prod_Id);
                    int count = pst.executeUpdate();
                    if(count>0){
                        jbtnTransfer.setEnabled(false);
                        JOptionPane.showMessageDialog(this, "Transfer Successfully");
                         products();
                         jtxtQty.setText("");
                         jtxtTrackingID.requestFocus();
                         jbtnTransfer.setEnabled(false);
                    }else{
                       JOptionPane.showMessageDialog(this, "something went wrong in RequestGRN"); 
                    }
                   }else{
                       JOptionPane.showMessageDialog(this, "something went wrong in Transfer exists"); 
                   }
                }else{
                    String sql = "insert into TransferTable (tracking_id,Prod_Id,Prod_Name,Description,Costprice,RetailPrice,Qty,Quality,vehicleno,Reciving,Remarks)values(?,?,?,?,?,?,?,?,?,?,?)";
            try {
                pst = con.prepareStatement(sql);
                pst.setString(1, tracking_id);
                pst.setString(2, Prod_Id);
                pst.setString(3, Prod_Name);
                pst.setString(4, Description);
                pst.setString(5, Costprice);
                pst.setString(6, RetailPrice);
                pst.setString(7, jtxtQty.getText());
                pst.setString(8, Quality);
                pst.setString(9, vehicleno);
                pst.setString(10, Reciving);
                pst.setString(11, Remarks);
                int count = pst.executeUpdate();
                if(count>0){
                    int Qty1 = Integer.parseInt(Qty)-Integer.parseInt(jtxtQty.getText());
                    String exactQty = String.valueOf(Qty1);
                    sql = "Update RequestGRN set Qty = ? where tracking_id = ? and  Prod_Id= ? ";
                    pst = con.prepareStatement(sql);
                    pst.setString(1, exactQty);
                    pst.setString(2, tracking_id);
                    pst.setString(3, Prod_Id);
                    int counts = pst.executeUpdate();
                    if(counts>0){
                        JOptionPane.showMessageDialog(this, "Transfer Successfully");
                         products();
                         jtxtQty.setText("");
                         jtxtTrackingID.requestFocus();
                    }else{
                       JOptionPane.showMessageDialog(this, "something went wrong in RequestGRN"); 
                    }
                    
                }else{
                    JOptionPane.showMessageDialog(this, "something went wrong in Transfer");
                }
            } catch (SQLException ex) {
                Logger.getLogger(VendorTransfers.class.getName()).log(Level.SEVERE, null, ex);
            }
                }
            } catch (SQLException ex) {
                Logger.getLogger(VendorTransfers.class.getName()).log(Level.SEVERE, null, ex);
            }
        }     
        }else{
            JOptionPane.showMessageDialog(this, "Please enter everything \n properly...");
        }
        }
        }else{
           JOptionPane.showMessageDialog(this, "Please enter Qty is Empty"); 
        }
        }else{
         JOptionPane.showMessageDialog(this, "Please enter Qty in Numbers");
         jtxtQty.setText("");
         jtxtQty.requestFocus();
        }
    }//GEN-LAST:event_jbtnTransferActionPerformed
    private void checkUserType(String name, int id,String userType){
        System.gc();
        this.setVisible(false);
        switch (userType) {
            case "Admin" -> new Users.Admin(name,id,userType,con).setVisible(true);
            case "Receving" -> new Users.Receving(name,id,userType,con).setVisible(true);
            case "Quality" -> new Users.Quality(name,id,userType,con).setVisible(true);
            case "Vendor" -> new Users.Vendor(name,id,userType,con).setVisible(true);
            case "Billing" -> new Users.Billing(name,id,userType,con).setVisible(true);
            default -> JOptionPane.showMessageDialog(this, "Something went wrong");
        }
    }
    
    private void jbtnbackjButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnbackjButton6ActionPerformed
         checkUserType(name,id,userType);
    }//GEN-LAST:event_jbtnbackjButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VendorTransfers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VendorTransfers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VendorTransfers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VendorTransfers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VendorTransfers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel jUserId;
    private javax.swing.JLabel jUserName;
    private javax.swing.JButton jbtnTransfer;
    private javax.swing.JButton jbtnViewProduct;
    private javax.swing.JButton jbtnback;
    private javax.swing.JTable jtableProduct;
    private javax.swing.JTextField jtxtQty;
    private javax.swing.JTextField jtxtTrackingID;
    // End of variables declaration//GEN-END:variables
}
